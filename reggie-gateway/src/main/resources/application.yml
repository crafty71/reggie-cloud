server:
  port: 8000 # 网关端口
spring:
  redis:
    host: 127.0.0.1 # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    timeout: 1000ms # 连接超时时间
  application:
    name: gateway # 服务名称
  cloud:
    nacos:
      server-addr: localhost:8848 # nacos地址
    gateway:
      routes: # 网关路由配置
        - id: user-service # 路由id，自定义，只要唯一即可
          uri: lb://user-service # 路由的目标地址 lb就是负载均衡，后面跟服务名称
          predicates: # 路由断言，也就是判断请求是否符合路由规则的条件
            - Path=/user/** # 这个是按照路径匹配，只要以/user/开头就符合要求
          filters:
            - StripPrefix=1
        - id: dish-service
          uri: lb://dish-service
          predicates:
            - Path=/dish/**
          filters:
            - StripPrefix=1
        - id: dishFlavor-service
          uri: lb://dishFlavor-service
          predicates:
            - Path=/dishFlavor/**
          filters:
            - StripPrefix=1
        - id: category-service
          uri: lb://category-service
          predicates:
            - Path=/category/**
          filters:
            - StripPrefix=1
        - id: setMeal-service
          uri: lb://setMeal-service
          predicates:
            - Path=/setMeal/**
          filters:
            - StripPrefix=1
        - id: setMeal-dish-service
          uri: lb://setMeal-dish-service
          predicates:
            - Path=/setMealDish/**
          filters:
            - StripPrefix=1
      globalcors: # 全局的跨域处理
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域检测的有效期